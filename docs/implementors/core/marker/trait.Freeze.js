(function() {var implementors = {
"ipns_entry":[["impl Freeze for <a class=\"struct\" href=\"ipns_entry/cbor/struct.Data.html\" title=\"struct ipns_entry::cbor::Data\">Data</a>",1,["ipns_entry::cbor::Data"]],["impl Freeze for <a class=\"enum\" href=\"ipns_entry/entry/protobuf/ipns_entry/enum.ValidityType.html\" title=\"enum ipns_entry::entry::protobuf::ipns_entry::ValidityType\">ValidityType</a>",1,["ipns_entry::entry::protobuf::ipns_entry::ValidityType"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/entry/protobuf/struct.IpnsEntry.html\" title=\"struct ipns_entry::entry::protobuf::IpnsEntry\">IpnsEntry</a>",1,["ipns_entry::entry::protobuf::IpnsEntry"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/signer/struct.Signables.html\" title=\"struct ipns_entry::signer::Signables\">Signables</a>",1,["ipns_entry::signer::Signables"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/signer/struct.Signed.html\" title=\"struct ipns_entry::signer::Signed\">Signed</a>",1,["ipns_entry::signer::Signed"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/signer/struct.Signer.html\" title=\"struct ipns_entry::signer::Signer\">Signer</a>",1,["ipns_entry::signer::Signer"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/signer/struct.V2Signer.html\" title=\"struct ipns_entry::signer::V2Signer\">V2Signer</a>",1,["ipns_entry::signer::V2Signer"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/signer/struct.V1Signer.html\" title=\"struct ipns_entry::signer::V1Signer\">V1Signer</a>",1,["ipns_entry::signer::V1Signer"]],["impl Freeze for <a class=\"struct\" href=\"ipns_entry/struct.DataBuilder.html\" title=\"struct ipns_entry::DataBuilder\">DataBuilder</a>",1,["ipns_entry::DataBuilder"]]],
"ipns_server":[["impl Freeze for <a class=\"struct\" href=\"ipns_server/struct.Server.html\" title=\"struct ipns_server::Server\">Server</a>",1,["ipns_server::Server"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()